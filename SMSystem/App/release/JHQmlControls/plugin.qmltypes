import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -nonrelocatable JHQmlControls 1.0 D:/zjk/Saturn'

Module {
    dependencies: []
    Component{
        name: "JHButton 1.0"
        prototype: "QQuickRectangle"
        exports: [
            "JHQmlControls/JHButton 1.0",
        ]
        exportMetaObjectRevisions: [0]
		Property { name: "imageSource"; type: "string" }
		Property { name: "buttonText"; type: "string" }
		Property { name: "textSize"; type: "int" }
		Property { name: "buttonTextColor"; type: "string" }
		Property { name: "textGlow"; type: "bool" }
		Property { name: "imageNormColor"; type: "string" }
		Property { name: "imageHoverColor"; type: "string" }
		Property { name: "imagePressColor"; type: "string" }
		Property { name: "imageFillMode"; type: "int" }
		Property { name: "itemMargins"; type: "int" }
		
		Signal {
            name: "buttonClicked"
        }
        Signal {
            name: "buttonPressed"
        }
		
		Signal {
            name: "buttonReleased"
        }
		Signal {
            name: "buttonDoubleClicked"
        }
		Signal {
            name: "buttonEntered"
        }
		Signal {
            name: "buttonExited"
        }
    }
    Component{
        name: "JHNavBarV"
        prototype: "QQuickRectangle"
        exports: [
            "JHQmlControls/JHNavBarV 1.0",
        ]
        exportMetaObjectRevisions: [0]
        Property { name: "modelData"; type: "QVariant" }
        Property { name: "currentIndex"; type: "int" }

        Signal {
            name: "reqSwitchPage"
            Parameter { name: "pageIndex"; type: "int" }
        }
        Signal {
            name: "reqOpenPage"
            Parameter { name: "pageIndex"; type: "int" }
        }
    }
	
	Component{
        name: "JHMessagePopup"
        prototype: "QQuickRectangle"
        exports: [
            "JHQmlControls/JHMessagePopup 1.0",
        ]
        exportMetaObjectRevisions: [0]
        Property { name: "showMask"; type: "bool" }
        Property { name: "currentIndex"; type: "int" }
    }
	
	
	Component{
        name: "JHPopup"
        prototype: "QQuickRectangle"
        exports: [
            "JHQmlControls/JHPopup 1.0",
        ]
        exportMetaObjectRevisions: [0]
        Property { name: "showMask"; type: "bool" }
        Property { name: "animationType"; type: "string" }
		Property { name: "duration"; type: "int" }
		Property { name: "easingType"; type: "int" }
    }
	
	Component{
        name: "JHMask"
        prototype: "QQuickRectangle"
        exports: [
            "JHQmlControls/JHMask 1.0",
        ]
        exportMetaObjectRevisions: [0]
    }
	
	
	Component{
        name: "JHDialog"
        prototype: "QQuickRectangle"
        exports: [
            "JHQmlControls/JHDialog 1.0",
        ]
        exportMetaObjectRevisions: [0]
		Property { name: "showMask"; type: "bool" }
		Property { name: "animationType"; type: "string" }
		Property { name: "handle"; type: "Item" }
		Property { name: "label"; type: "alias" }
    }
	
	Component{
        name: "JHTableView"
        prototype: "QQuickRectangle"
        exports: [
            "JHQmlControls/JHTableView 1.0",
        ]
        exportMetaObjectRevisions: [0]
		Property { name: "headerItem"; type: "Item" }
        Property { name: "model"; type: "model" }
        Property { name: "delegate"; type: "Item" }
    }

    Component{
        name: "JHTableRow"
        prototype: "QQuickRectangle"
        exports: [
            "JHQmlControls/JHTableRow 1.0",
        ]
        exportMetaObjectRevisions: [0]
		Property { name: "selectState"; type: "int" }

        Signal {
            name: "pressed"
            Parameter { name: "c"; type: "var" }
            Parameter { name: "evt"; type: "var" }
        }
        Signal {
            name: "released"
            Parameter { name: "c"; type: "var" }
            Parameter { name: "evt"; type: "var" }
        }
        Signal {
            name: "clicked"
            Parameter { name: "c"; type: "var" }
            Parameter { name: "evt"; type: "var" }
        }
    }

    Component{
        name: "JHTableHeader"
        prototype: "QQuickRectangle"
        exports: [
            "JHQmlControls/JHTableHeader 1.0",
        ]
        exportMetaObjectRevisions: [0]
		Property { name: "miniWidth"; type: "real" }
        Property { name: "roleMap"; type: "var" }
        Property { name: "roleNameMap"; type: "var" }
        Property { name: "roleSizeMap"; type: "var" }
        Property { name: "miniSizeMap"; type: "var" }

        Signal {
            name: "pressed"
            Parameter { name: "c"; type: "var" }
            Parameter { name: "evt"; type: "var" }
        }
        Signal {
            name: "released"
            Parameter { name: "c"; type: "var" }
            Parameter { name: "evt"; type: "var" }
        }
        Signal {
            name: "clicked"
            Parameter { name: "c"; type: "var" }
            Parameter { name: "evt"; type: "var" }
        }
    }
	
    Component{
        name: "JHTableColumn"
        prototype: "QQuickRectangle"
        exports: [
            "JHQmlControls/JHTableColumn 1.0",
        ]
        exportMetaObjectRevisions: [0]
		Property { name: "tblHeader"; type: "JHTableHeader" }
        Property { name: "resizable"; type: "bool" }
        Property { name: "tagName"; type: "string" }
    }

    Component{
        name: "JHTableCell"
        prototype: "QQuickRectangle"
        exports: [
            "JHQmlControls/JHTableCell 1.0",
        ]
        exportMetaObjectRevisions: [0]
		Property { name: "prevCell"; type: "Item" }
        Property { name: "nextCell"; type: "Item" }
        Property { name: "tagName"; type: "string" }
        Property { name: "text"; type: "string" }
    }

    Component{
        name: "JHButton2"
        prototype: "QQuickRectangle"
        exports: [
            "JHQmlControls/JHButton2 1.0",
        ]
        exportMetaObjectRevisions: [0]
		Property { name: "imageSource"; type: "alias" }
        Property { name: "text"; type: "alias" }
		Signal {
            name: "buttonClicked"
        }
        Signal {
            name: "buttonPressed"
        }
		
		Signal {
            name: "buttonReleased"
        }
		Signal {
            name: "buttonDoubleClicked"
        }
		Signal {
            name: "buttonEntered"
        }
		Signal {
            name: "buttonExited"
        }
    }
}



